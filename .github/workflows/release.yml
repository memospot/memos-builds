name: Build and Release

on:
  push:
    branches:
      - "release/v*.*.*"
    tags-ignore:
      - "v*.*.*-*"
  workflow_dispatch:
    inputs:
      memos-tag:
        description: |
          Upstream tag to build.
          The action will fail if a matching tag already exists on this repository.
        required: false
        type: string

env:
  DOCKER_PLATFORMS: |
    linux/386
    linux/amd64
    linux/amd64/v2
    linux/amd64/v3
    linux/arm/v5
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  QEMU_PLATFORMS: |
    linux/386
    linux/amd64
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  # Variables set by scripts/ci.py
  GORELEASER_CURRENT_TAG: "[not set]"
  BUILD_VERSION: "[not set]"
  CACHE_KEY: "[not set]"

jobs:
  front-end:
    name: Build front-end
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with: { fetch-depth: 0 }

      # setup deps
      - name: Setup Just
        uses: taiki-e/install-action@331a600f1b10a3fed8dc56f925012bede91ae51f
        with: { tool: just@1.34.0 }

      - name: Setup pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2
        with: { version: 9 }

      - name: Setup Node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos/web/pnpm-lock.yaml"
      # /setup deps

      # When running the workflow manually, allows to build a specific tag or release.
      # If the build is triggered by other events, will build whatever is already commited to the subtree.
      - if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.memos-tag != ''  }}
        name: Pull usememos/memos:tags/${{ inputs.memos-tag }} to subtree
        run: |
          just setup-env
          just git-commit-any
          just git-subtree-pull-tag "${{ inputs.memos-tag }}"

      # Run again after subtree pull, in case version.go changed.
      - name: Setup environment
        run: just setup-env

      - name: Build front-end
        run: just build-frontend

      - name: Upload front-end artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: frontend_${{env.BUILD_VERSION}}
          compression-level: 9
          if-no-files-found: error
          path: memos/server/router/frontend/dist/

  goreleaser:
    name: Build back-end and Release
    runs-on: ubuntu-24.04
    permissions:
      actions: read # required by wait action
      contents: write
      discussions: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        with: { fetch-depth: 0 }

      # setup deps
      - name: Setup Just
        uses: taiki-e/install-action@331a600f1b10a3fed8dc56f925012bede91ae51f
        with: { tool: just@1.34.0 }

      - name: Setup buf
        uses: bufbuild/buf-setup-action@35c243d7f2a909b1d4e40399b348a7fdab27d78d
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: "1.34.0"

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@0fc45e912669ba9e8fa2b430e97c8da2a632e29b
        with: { install-only: true }

      - name: Setup Go
        uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7
        with:
          go-version: "1.22"
          check-latest: true
          cache-dependency-path: memos/go.sum
      # /setup deps

      # When running the workflow manually, allows to build a specific tag or release.
      # If the build is triggered by other events, will build whatever is already commited to the subtree.
      - if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.memos-tag != ''  }}
        name: Pull usememos/memos:tags/${{ inputs.memos-tag }} to subtree
        run: |
          just setup-env
          just git-commit-any
          just git-subtree-pull-tag "${{ inputs.memos-tag }}"
          just git-retag "${{ inputs.memos-tag }}" --push

      # Run again after subtree pull, in case version.go changed.
      - name: Setup environment
        run: just setup-env

      ### Front-end ###
      - name: Wait for the front-end build to finish
        uses: yogeshlonkar/wait-for-jobs@dab5be1aa1ed90039623395626f0b231ded77d2c
        with:
          jobs: "Build front-end"
          interval: "2000"
          ttl: "10"

      - name: Download front-end artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: frontend_${{env.BUILD_VERSION}}
          path: memos/server/router/frontend/dist/
      - run: ls -R memos/server/router/frontend/dist/
      ### /Front-end ###

      - name: go.mod tidy
        run: just build-backend-tidy
      - name: Generate protobuf-related code
        run: just build-buf

      - name: Build and release with Goreleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --timeout 60m --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ### Docker ###
      - name: Rename goreleaser builds to the format expected by current Dockerfile
        run: just rename-to-docker

      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3
        with:
          platforms: ${{ env.QEMU_PLATFORMS }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb
        with:
          version: latest
          install: true
          platforms: ${{ env.DOCKER_PLATFORMS }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: lincolnthalles
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log-in to GitHub's Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: |
            lincolnthalles/memos
            ghcr.io/memospot/memos-builds
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ env.BUILD_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.BUILD_VERSION }}

      - name: Build and Push Docker images
        id: docker_build
        uses: docker/build-push-action@5176d81f87c23d6fc96624dfdbcd9f3830bbe445
        with:
          context: ./
          file: ./docker/Dockerfile
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      ### /Docker ###
