name: Nightly Build

on:
  push:
    tags:
      - "v*.*.*-*"
  schedule:
    - cron: "25 0 * * *" # Run every day at 00:25 UTC
  workflow_dispatch:

env:
  DOCKER_PLATFORMS: |
    linux/386
    linux/amd64
    linux/amd64/v2
    linux/amd64/v3
    linux/arm/v5
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  QEMU_PLATFORMS: |
    linux/386
    linux/amd64
    linux/arm/v6
    linux/arm/v7
    linux/arm64
    linux/ppc64le
    linux/riscv64
    linux/s390x
  # Variables set by scripts/ci.py
  GORELEASER_PREVIOUS_TAG: "[not set]"
  GORELEASER_CURRENT_TAG: "[not set]"
  BUILD_VERSION: "[not set]"
  CACHE_KEY: "[not set]"
  MEMOS_VERSION: "[not set]"

jobs:
  front-end:
    name: Build front-end
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with: { fetch-depth: 0, persist-credentials: false }

      # setup deps
      - name: Setup Just
        uses: taiki-e/install-action@f13d8e15c52b25c79b608d399cc802adc73d83da
        with: { tool: just@1.43.0 }

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
        with: { version: 9 }

      - name: Setup Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: "memos/web/pnpm-lock.yaml"
      # /setup deps

      - name: Setup environment variables
        run: just setup-env --nightly

      - name: Pull latest changes from usememos/memos:main to subtree
        run: just git-commit-any && just git-subtree-pull main

      - name: Build front-end
        run: just build-frontend

      - name: Upload front-end artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: frontend_${{env.BUILD_VERSION}}
          compression-level: 9
          if-no-files-found: error
          path: memos/server/router/frontend/dist/

  goreleaser:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      actions: read # required by wait action
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with: { fetch-depth: 0, persist-credentials: false }

      # setup deps
      - name: Setup Just
        uses: taiki-e/install-action@f13d8e15c52b25c79b608d399cc802adc73d83da
        with: { tool: just@1.43.0 }

      - name: Setup buf
        uses: bufbuild/buf-setup-action@a47c93e0b1648d5651a065437926377d060baa99
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: "1.52.1"

      - name: Setup UPX
        uses: crazy-max/ghaction-upx@db8cc9515a4a7ea1b312cb82fbeae6d716daf777
        with: { install-only: true }

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version: "1.25"
          check-latest: true
          cache-dependency-path: memos/go.sum

      - name: Setup Goreleaser
        uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2
        with:
          repo: goreleaser/goreleaser
          cache: enable
          tag: "v2.4.8"
      # /setup deps

      - name: Setup environment variables
        run: just setup-env --nightly

      - name: Pull latest changes from usememos/memos:main to subtree
        run: just git-commit-any && just git-subtree-pull main

      ### Front-end ###
      - name: Wait for the front-end build to finish
        uses: yogeshlonkar/wait-for-jobs@741345373775589ba0bb9945a8510f868b164117
        with:
          jobs: "Build front-end"
          interval: "2000"
          ttl: "10"

      - name: Download front-end artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0
        with:
          name: frontend_${{env.BUILD_VERSION}}
          path: memos/server/router/frontend/dist/
      - run: ls -R memos/server/router/frontend/dist/
      ### /Front-end ###

      - name: Nightly build
        run: just build-nightly-backend-only

      - name: Create pre-release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090
        with:
          files: |
            build/*.tar.gz
            build/*.zip
            build/*.txt
          body: |
            This is an **untested** pre-release, built with bleeding-edge upstream Memos code.
            It is strongly recommended that you do *not* use it in production.

            *Ensure that you use a different database than the one you use for stable releases.*

            Version identifier `${{ env.BUILD_VERSION }}` is auto-generated, based on what is set at Memos upstream on `version.go` file. Therefore, pre-release versioning is subject to change without notice.

            Release assets may be overwritten by the daily automated builds if the upstream Memos version hasn't changed.

            **[Official Memos upstream changelog](https://github.com/usememos/memos/compare/${{ env.MEMOS_VERSION }}...main)**
          tag_name: ${{ env.BUILD_VERSION }}
          draft: false
          prerelease: true

      ### Docker ###
      - name: Rename goreleaser builds to the format expected by current Dockerfile
        run: just rename-to-docker

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
        with:
          platforms: ${{ env.QEMU_PLATFORMS }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
        with:
          version: latest
          install: true
          platforms: ${{ env.DOCKER_PLATFORMS }}

      - name: Log-in to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: lincolnthalles
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log-in to GitHub's Container registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: |
            lincolnthalles/memos
            ghcr.io/memospot/memos-builds
          tags: type=raw,value=nightly

      - name: Build and Push Docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ./
          file: ./docker/Dockerfile
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
      ### /Docker ###
